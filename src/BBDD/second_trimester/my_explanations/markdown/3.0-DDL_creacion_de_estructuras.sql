/* COMANDOS GENERALES */

VERSION() - MUESTRA LA VERSION
CURRENTE_DATE() - FECHA ACTUAL
NOW() - FECHA Y HORA
USER() - USUARIO ACTIVO

SELECT version(), current_date(), now(), user();

/*-------------------------------------------------*/

SHOW DATABASES; /* MUESTRA LAS BBDD QUE ALOJA EL SERVIDOR */
USE EJEMPLO; /* INICIALIZA EL USO/CONEXION CON UNA BASE DE DATOS */
SHOW TABLES; /* MUESTRA LAS TABLAS DE LA BD ACTIVA */
DESCRIBE EMPLEADOS; /* MUESTRA LA ESTRUCTURA Y DEFINICIÓN DE UNA TABLA */

/*----------- FUNCIONES EJECUTADAS CON SELECT ------------*/

SELECT (5+2)/4;

SELECT 8 div 2 /* DIVISION ENTERA*/, 10 mod 4 /* RESTO DE LA DIVISIÓN */, 5/2;

SELECT 8/2 DIVISION_REAL, 5 div 2 DIVISION_ENTERO, 9 mod 2 RESTO; #NOMBRAR LAS OPERACIONES

SELECT 15 >> 1 BITS_DERECHA, 15 << 1 BITS_IZQUIERDA, 15 | 10 SUMA_BIT_A_BIT, 15 & 10 PRODUCTO_BIT_A_BIT, 15 ^ 10 XOR; #OPERACIONES COMPLEJAS

SELECT (5+8)>(3*7); #RESULTADO 0 FALSO - 1 VERDADERO

SELECT DATE_SUB(NOW(), INTERVAL 20 YEAR); #LA FECHA ACTUAL MENOS 20 AÑOS
SELECT DATE_ADD(NOW(), INTERVAL 10 YEAR); #LA FECHA ACTUAL MAS 10 AÑOS

SELECT DATEDIFF(NOW(),'1980-03-10'/* FECHA DE NACIMIENTO*/)/365; /* CUANTO AÑOS DE EDAD TIENES AHORA */

SELECT PI();
SELECT MOD(10,2);
SELECT character_length('PEPE');
SELECT ABS(-10);
SELECT SQRT(225);
SELECT BIN(2017);
SELECT CHAR(64);
SELECT CONCAT('PEDRO ', 'DISEÑO WEB ', '04-FEB-2017');
SELECT NOW();
Select CURDATE();
SELECT CURRENT_TIME();
SELECT CURRENT_DATE();
SELECT USER();
SELECT SYSDATE();
SELECT DATE_FORMAT(SYSDATE(), '%T') ;
SELECT DATABASE();
SELECT VERSION();

SELECT VERSION(); /* VERSION MYSQL */
SELECT NOW(); /* FECHA Y HORA ACTUAL */
SELECT CURRENT_DATE(); /* FECHA ACTUAL */
SELECT USER(); /* USUARIO ACTIVO */

/* PERACIONES MATEMÁTICAS */

SELECT (5+2)/3 AS CALCULO;
SELECT 17 DIV 2, 17 MOD 2;
SELECT (3+2)<(4+5);

/* INCREMENTA 1O AÑOS A UN FECHA */

SELECT DATE_ADD('1990-12-10', INTERVAL 10 YEAR);

INTERVAL 3 YEAR
INTERVAL 2 MONTH
INTERVAL 7 DAY

/* CALCULO DE LA EDAD DE UNA PERSONA QUE NACIO EL 19-01-1973, REDONDEANDO LA EDAD A DOS DECIMALES */
SELECT ROUND(DATEDIFF(NOW(),'1973-01-19')/365,2);

SELECT HEX('FRANCISCO'); /* CONVERTIR CADENA EN NÚMERO HEXADECIMAL */

/* CONVERTIR EN MAYUSCULAS O MINUSCULAS */
SELECT UCASE('pepe');
SELECT LCASE('PEPE');

/* SINONIMOS DE CURRENT_DATE Y CURRENT_TIME, FECHA Y HORA ACTUAL */
SELECT CURDATE();
SELECT CURTIME();

SELECT DAYOFYEAR(NOW()); /* NÚMERO DE DIA DEL AÑO */
SELECT DAYOFWEEK(NOW())-1; /* NÚMERO DE DIA DE LA SEMANA MENOS UNO PARA FORMATO NO ANGLOSAJON */
SELECT DAYNAME(NOW()); /* NOMBRE DIA DE LA SEMANA */
SELECT WEEKOFYEAR(NOW()); /* NÚMERO DE LA SEMANA */

/* CONCATENAR CON O SIN CARACTER ENTRE ELEMENTOS */

SELECT CONCAT(UCASE(DAYNAME(NOW())),', ',DAYOFMONTH(NOW()),' de junio de ',year(now()),' - QUEDAN ',365-DAYOFYEAR(NOW()),' DIAS PARA FIN DE AÑO QUE SERÁ - ',UPPER(DAYNAME('2020-12-31'))) as MENSAJE;
SELECT CONCAT_WS('-',CONCAT(LEFT(NOMBRE,1),LEFT(APEL1,1),LEFT(APEL2,1)),LEFT(IDCLI,3)) AS INICIALES FROM ENVIOS;

SELECT CONCAT('ESTIMADO SEÑOR ',NOMBRE,', SU PEDIDO LLEGARÁ EL PROXIMO DÍA ',DAY(FENT),' DE JUNIO QUE SERÁ ',DAYNAME(FENT)) AS MENSAJE FROM ENVIOS;
SELECT CONCAT_WS(' ','estimado sr',nombre,'su pedido llegara el proximo dia',day(fent),'de junio que sera',dayname(fent)) as mensaje from envios;

CHAR_LENGTH('FRANCISCO')
CHARACTER_LENGTH()

/* QUITAR ESPACIOS DE IZQUIERDA O DERECHA, O AMBOS */

SELECT TRIM('  FEDERICO  ')
SELECT RTRIM('  FEDERICO  ')
SELECT LTRIM('  FEDERICO  ');

SELECT TRIM('   francisco '),TRIM(' daksjdlsd   ');

/* PONER ESPACIOS */

SELECT CONCAT('HOLA', SPACE(10), 'PACO');

/* REPETIR, REEMPLAZAR Y DAR LA VUELTA  */

SELECT REPEAT('PACO', 3);
SELECT REPLACE ('PACO', 'AC', 'ET');
SELECT REVERSE('ROMA');

/* SACAR CARACTERES DE LA IZQUIERDA O DERECHA DE UNA CADENAS */
SELECT LEFT('FRANCISCO',1);
SELECT RIGHT('ALISEDA',2);

/* SEPARAR SUBCADENAS DE POSICIONES INTERIORES DE LA CADENA */

SELECT SUBSTRING('PEDRITO', 2);
SELECT SUBSTRING('PEDRITO', 2, 4);

SELECT SUBSTRING('PEDRO' FROM 2);
SELECT SUBSTRING('PEDRO' FROM 3 FOR 5);

SELECT CONCAT(ucase(LEFT('francisco',1)),substring('francisco',2,20),' ',ucase(LEFT('aliseda',1)),substring('aliseda',2,20),' ',ucase(LEFT('polanco',1)),substring('polanco',2,20)) AS CLIENTE;

/* LONGITUD EN BITS */

SELECT LENGTH('PEDRO'); 
SELECT LENGTH('ñÑ%-&Ç-]'); 

/* -------------- COMANDOS DDL ---------------*/

CREATE DATABASE PRUEBAS; /* CREAMOS UNA BASE DE DATOS */
USE PRUEBAS; /* ACTIVAMOS EL USO DE LA BASE DE DATOS QUE QUEREMOS USAR */
SHOW DATABASES; /* MUESTRA LAS BASES DE DATOS QUE TENEMOS EN EL SERVIDOR QUE ESTÁ CONECTADO */
DROP DATABASE PRUEBAS; /* BORRAR UNA BASE DE DATOS */


/* CREAMOS UNA TABLA, DEFINIENDO LOS CAMPOS, TIPOS DE DATOS Y PROPIEDADES */
CREATE TABLE IF NOT EXISTS PELICULAS(
	COD INT PRIMARY KEY auto_increment,
    TITULO VARCHAR(100) NOT NULL,
    DIRECTOR VARCHAR(80) NOT NULL, /* COMENTARIO SQL */
    PRODUCTOR VARCHAR(80) NOT NULL,    
	RECAUDACION DOUBLE NOT NULL,
    GALARDONES INTEGER,
    FECHAESTRENO DATE NOT NULL,
    ARGUMENTO LONGTEXT
);

DESCRIBE PELICULAS; /* MUESTRA LA ESTRUCTURA DE LA TABLA QUE INDIQUEMOS */

/* INSERT MULTIPLE CON ELECCIÓN DE LOS CAMPOS QUE VAMOS A INTRODUCIR Y EN EL ORDEN EN QUE VAN A SER PUESTOS */
INSERT INTO PELICULAS (TITULO,DIRECTOR,PRODUCTOR,RECAUDACION,GALARDONES,FECHAESTRENO,ARGUMENTO) VALUES
('EL SEÑOR DE LOS ANILLOS','PETER JACKSON','PEDRO RUIZ',200000,8,'2000-10-12','KSAD JASJD SALDJS LKDJ ASLA JSDLKSA JDLKS DJSAD L'),
('BLADE RUNNER','RAMIRO','PEPE LOPEZ',122000,6,'1992-12-10','KSAD JASJD SALDJS LKDJ ASLA JSDLKSA JDLKS DJSAD L');

CREATE TABLE REPARTO(
	CODPEL INTEGER,
    CODACT INTEGER,
    FINIRODAJE DATE NOT NULL,
    FFINRODAJE DATE NOT NULL,
    PERSONAJE VARCHAR(20) NOT NULL,
    RETRIBUCION DOUBLE,
    FOREIGN KEY (CODPEL) REFERENCES PELICULAS (COD),
    FOREIGN KEY (CODACT) REFERENCES ACTORES (COD)
);

/* INSERT ÚNICO CON INTRODUCCIÓN DE TODOS LOS CAMPOS DE LA TABLA EN ORDEN */
INSERT INTO REPARTO VALUES (2,1,'1991-03-01','1991-08-15','SECUNDARIO',12000);

CREATE TABLE IF NOT EXISTS ACTORES(
	COD INTEGER NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT 'CLAVE PRIMARIA',
    NOMBRE VARCHAR(50) NOT NULL COMMENT 'NOMBRE REAL NO ARTISTICO',
    NACIMIENTO DATE NOT NULL,
    NACIONALIDAD VARCHAR(50),
    GENERO CHAR,
    TLF VARCHAR(15) COMMENT 'TELEFONO MOVIL',
    EMAIL VARCHAR(50),
    PREMIOS INTEGER,
    COTIZACION INTEGER
);

/* INTRODUCIMOS UN NUEVO CAMPO EN LA TABLA ACTORES Y LO COLOCAMOS DESPUES DE TLF */
ALTER TABLE ACTORES ADD EMAIL VARCHAR(100) DEFAULT NULL AFTER TLF;
ALTER TABLE ACTORES DROP EMAIL; /* BORRAR EL CAMPO EMAIL DE LA TABLA ACTORES */
/* MODIFICAMOS UN CAMPO, PONIENDO TODA LA DEFINICIÓN DE NOMBRE TIPO Y PROPIEDADES */
ALTER TABLE ACTORES MODIFY NACIONALIDAD VARCHAR(50) DEFAULT 'ESPAÑOLA';


/* INSERTAMOS TODO EL CONTENIDO DE LA TABLA ACTORES EN LA TABLA BACKUPACTORES */
INSERT INTO BACKUPACTORES SELECT * FROM ACTORES;
/* LA TABLA BACKUP, SOLO TENDRÁ LOS CAMPOS PERO NO SE PONDRÁ NINGUNA PROPIEDAD QUE AUTOMATICE LA INSERCIÓN,
YA QUE LLEVAREMOS TODOS LOS DATOS YA CREADOS DESDE LA TABLA ORIGEN */

CREATE TABLE IF NOT EXISTS BACKUPACTORES(
	COD INTEGER COMMENT 'CLAVE PRIMARIA',
    NOMBRE VARCHAR(50) COMMENT 'NOMBRE REAL NO ARTISTICO',
    NACIMIENTO DATE,
    NACIONALIDAD VARCHAR(50),
    GENERO CHAR,
    TLF VARCHAR(15) COMMENT 'TELEFONO MOVIL',
    EMAIL VARCHAR(50),
    PREMIOS INTEGER,
    COTIZACION INTEGER
);

/* INSERTAMOS DATOS EN LA TABLA BACKUP PERO FILTRANDO EL RESULTADO */
INSERT INTO ACTORESESPAÑA SELECT * FROM ACTORES WHERE NACIONALIDAD='ESPAÑOLA';

CREATE TABLE PEDIDOS (
	ID INTEGER PRIMARY KEY AUTO_INCREMENT,
    IDCLI CHAR(9) NOT NULL COMMENT 'IDENTIFICACIÓN NIF - NIE',
    CODPRODUCTO INTEGER NOT NULL,
    FPED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FENT DATE,
    ORIGEN VARCHAR(30),
    FSISTEMA DATE,
    PRECIOFINAL double
);

/* RENOMBRAMOS LA TABLA PEDIDOS COMO ENVIOS */
RENAME TABLE PEDIDOS TO ENVIOS;

TRUNCATE TABLE ENVIOS; /* BORRAMOS TODOS LOS DATOS E INICIALIZAMOS CONTADORES AUTO_INCREMENT*/
DROP TABLE BACKUPACTORES; /* BORRADO DE TABLA Y DATOS */
DELETE /* BORRAMOS LOS REGISTROS SELECCIONADOS (LO PRACTICAREMOS MÁS ADELANTE) */


/* INSERT SIMPLE Y MULTIPLE, DE CAMPOS CON FUNCIONES DIFERENTES*/
INSERT INTO ENVIOS (IDCLI,CODPRODUCTO,FENT,ORIGEN,FSISTEMA,PRECIOFINAL) VALUES
('52505013S',12,date_add(now(),INTERVAL 7 DAY),user(),date_format(SYSDATE(),'%T'),1);

INSERT INTO ENVIOS (IDCLI,NOMBRE,APEL1,APEL2,CODPRODUCTO,FENT,ORIGEN,FSISTEMA,PRECIOFINAL) VALUES
('31231233T','LUIS','ALVAREZ','PEREZ',21,date_add(NOW(),INTERVAL 10 DAY),USER(),SYSDATE(),100),
('31234233T','ANA','LUNAREA','LEIMES',28,date_add(NOW(),INTERVAL 3 DAY),USER(),SYSDATE(),50);

-------------------------------------------------------------------------------
							TIPOS DE DATO TEXTO
-------------------------------------------------------------------------------
NUMERICOS
---------

INT - INTEGER: Número entero entre -2147483648 y 2147483647 o entre 0 y 4294967295.
DECIMAL - NUMERIC: Almacena los números con coma flotante como cadenas o string.
FLOAT (4,2): Almacena números con coma flotante,primer número de parametro digitos parte entera, segundo número de parametro digitos decimales.
DOUBLE PRECISION - DOUBLE: Almacena número con coma flotante con precisión doble.
SMALLINT: Ocupación de 2 bytes con valores entre -32768 y 32767 o entre 0 y 65535.
TINYINT: Ocupación de 1 bytes con valores entre -128 y 127 o entre 0 y 255.
BIGINT: Ocupación de 8 bytes con valores entre -8388608 y 8388607 o entre 0 y 16777215.
BIT - BOOLEAN - BOOL: Número entero con valor 0 o 1.

FECHAS
------

DATE: Fechas como año, mes y día entre 1000-01-01 y 9999-12-31.
DATETIME: Almacena una fecha año-mes-día y una hora horas:minutos:segundos, su rango oscila entre  1000-01-01 00:00:00 y 9999-12-31 23:59:59.
TIME: Válido para almacenar una hora horas:minutos:segundos. Su rango máximo de horas es -838:59:59-, formato almacenado es HH:MM:SS.
TIMESTAMP: Almacena una fecha y hora UTC. El rango de valores oscila entre -1970-01-01 00:00:01′ y ‘2038-01-19 03:14:07-.
YEAR: Almacena años con 2 o 4 dígitos de longitud, por defecto son 4. El rango de valores oscila entre 1901 y 2155 con 4 dígitos. Mientras que con 2 dígitos el rango es desde 1970 a 2069  (70-69).

/* HORAS CON ZONA HORARIA */

TIME WITH TIME ZONE(0-6)
TIMESTAMP WITH TIME ZONE(2)
	
CADENAS/TEXTO
-------------

CHAR - CHARACTER: /* Longitud fija entre 1 a 255 caracteres */
VARCHAR - CHARACTER VARYING: /* Longitud variable cuya longitud comprende de 1 a 255 caracteres */
TINYTEXT: Longitud máxima de 255 caracteres de texto.
TEXT: Longitud máxima de 65.535 caracteresde texto.
MEDIUMTEXT:Longitud máxima de 16.777.215 caracteres de texto.
LONGTEXT: Longitud máxima de 4.294.967.298 caracteres de texto.
	
BLOB: Una longitud máxima de 65.535 caracteres. ALmacena objetos binarios como ficheros de texto, imágenes, ficheros de audio o vídeo.
TINYBLOB: Una longitud máxima de 255 caracteres. ALmacena objetos binarios como ficheros de texto, imágenes, ficheros de audio o vídeo.
MEDIUMBLOB: Una longitud máxima de 16.777.215 caracteres. ALmacena objetos binarios como ficheros de texto, imágenes, ficheros de audio o vídeo.
LONGBLOB: Una longitud máxima de 4.294.967.298 caracteres. ALmacena objetos binarios como ficheros de texto, imágenes, ficheros de audio o vídeo.

SET: Almacena ningún o algunos valores una lista como máximo de 64 posibles valores.
ENUM: Funciona como SET pero almacena un valor.

/* ------- EJEMPLOS CREATE TABLE -------------*/
		
		CREATE TABLE IF NOT EXISTS CLIENTES (
		NIF int(11) NOT NULL AUTO_INCREMENT COMMENT 'CLAVE PRIMARIA',
		NOMBRE varchar(50) NOT NULL COMMENT 'NOMBRE DEL CLIENTE',
		APELLIDOS varchar(100) NOT NULL COMMENT 'APELLIDOS DEL CLIENTE',
		TELEFONO int(9) NOT NULL COMMENT 'NUMERO MOVIL',
		CP int(5) DEFAULT NULL,
		EDAD int(3) DEFAULT NULL,
		SEXO char(1) NOT NULL,
		PRIMARY KEY (NIF),
		UNIQUE KEY TELEFONO (TELEFONO),
		KEY NOMBRE (NOMBRE)
		) ENGINE=InnoDB DEFAULT CHARSET=latin1 COMMENT='TABLA DE CLIENTES';
		
		----------------------------------------------------------------------
		
		CREATE TABLE CLIENTES (
		NIF varchar(11) NOT NULL PRIMARY KEY,
		NOMBRE varchar(50) NOT NULL,
		DIRECCION varchar(100)
		);
		
		CREATE TABLE VEHICULOS (
		CODIGO integer NOT NULL PRIMARY KEY,
		DESCRIPCION varchar(50),
		POTENCIA integer,
		CLIENTE varchar(11) REFERENCES CLIENTES (NIF) /*REFERENCIA A OTRA TABLA*/
		);
		
		CREATE TABLE MASCOTAS (
		CODIGO integer NOT NULL PRIMARY KEY,
		NOMBRE varchar(50),
		RAZA varchar(50),
		CLIENTE varchar(11) REFERENCES CLIENTES(NIF) ON DELETE CASCADE /* REFENCIA A OTRA TABLA */
        );
		
		---------------------------------------------------------------------
		
		CREATE TABLE LIBROS (
		ISBN varchar(11) NOT NULL,
		TITULO varchar(50) NOT NULL,
		AUTOR varchar(50) NOT NULL,
		PRIMARY KEY (ISBN,AUTOR) /*CLAVE COMPUESTA*/
		);
		
		---------------------------------------------------------------------
		
		CREATE TABLE Clientes (
		  CodigoCliente integer NOT NULL,
		  NombreCliente varchar(50) NOT NULL,
		  NombreContacto varchar(30) DEFAULT NULL,
		  ApellidoContacto varchar(30) DEFAULT NULL,
		  Telefono varchar(15) NOT NULL,
		  Fax varchar(15) NOT NULL,
		  LineaDireccion1 varchar(50) NOT NULL,
		  LineaDireccion2 varchar(50) DEFAULT NULL,
		  Ciudad varchar(50) NOT NULL,
		  Region varchar(50) DEFAULT NULL,
		  Pais varchar(50) DEFAULT NULL,
		  CodigoPostal varchar(10) DEFAULT NULL,
		  CodigoEmpleadoRepVentas integer DEFAULT NULL,
		  LimiteCredito numeric(15,2) DEFAULT NULL,
		  PRIMARY KEY (CodigoCliente),
		  CONSTRAINT Clientes_EmpleadosFK FOREIGN KEY (CodigoEmpleadoRepVentas) REFERENCES Empleados (CodigoEmpleado)
		) engine=innodb;
		
		---------------------------------------------------------------------
		
		CREATE TABLE estadisticas (
		temporada varchar(5) NOT NULL ,
		jugador int NOT NULL ,
		Puntos_por_partido float DEFAULT NULL,
		Asistencias_por_partido float DEFAULT NULL,
		Tapones_por_partido float DEFAULT NULL,
		Rebotes_por_partido float DEFAULT NULL,
		PRIMARY KEY (temporada,jugador),
		FOREIGN KEY (jugador) REFERENCES jugadores(Codigo)
		)engine=innodb;
		

/* --------------  ALTER ---------------*/
		
		ALTER TABLE CLIENTES ADD EMAIL VARCHAR(10) AFTER DIRECCION;
		ALTER TABLE CLIENTES DROP PRIMARY KEY;
		ALTER TABLE CLIENTES ADD COLUMN DNI CHAR(10) PRIMARY KEY FIRST;
		ALTER TABLE CLIENTES DROP EMAIL;
		
/* --------------  DROP ---------------*/

DROP - RENAME - BORRAR Y RENOMBRAR TABLAS

		DROP [TEMPORARY] TABLE NOMBRE_TABLA

		DROP TABLE LIBROS;
		DROP TABLE LIBROS, BIBLIOTECAS; #BORRADO MULTIPLE

/* --------------  RENAME ---------------*/

RENAME TABLE NOMBRE_TABLA TO NUEVO_NOMBRE_TABLA

		RENAME TABLE DUEÑO TO DUEÑOS;		